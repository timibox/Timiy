[{"title":"PHP字符串截取教程","url":"/zifuchuan.html","content":"\n做开发经常要用到字符串截取功能记录下笔记\n>我答题的时候发现，选错了以后会告诉你正确答案，然后再重新选正确答案即可完成答题。\n>于是乎就撸了一个脚本 先让它随便选择一个答案 然后得到正确答案再自动答题\n\n### 脚本开始\n\n<?php\n$str=\"AAA|BBB|CCC\";\necho strrchr($str, \"|\");\n?>\n","tags":["PHP","字符串截取"],"categories":["作品开发"]},{"title":"Hexo保姆及教程 远程推送","url":"/hexopush.html","content":"\n接着上一节教程 我们已经搭建了本地的hexo博客 接下来会给大家讲解如何推送到 Github 远程仓库\n\n首先 推送到Github 需要用到 Git 软件 上一节课有下载地址 其次推荐使用 SSH 传输\n\n如果你会如何把源码远程推送到Github仓库的话 可以跳过第一小节课程直接点我看 [通过 GitHub Actions 自动部署](#通过-GitHub-Actions-自动部署)\n\n### **远程仓库SSH KEY设置**\n\n本地Git仓库和Github仓库之间可以通过SSH传输，需要在个人Github页面setting中添加SSH key。\n\n**1、首先打开Git Bash输入命令：**\n\n```bash\nssh-keygen -t rsa -C \"4370142@qq.com\"  //记得修改后面这个邮箱 别傻傻的复制我的\n```\n\n输入完以后 无脑回车  当看到下图指示 说明密钥创建成功\n\n![](https://gitee.com/htmlmi/htmlmi/raw/master/images/20210517145913.png)\n\n2、成功后 我们打开我的电脑路径 `C:\\Users\\Administrator\\.ssh` 目录就可以看到刚才创建的密钥文件\n\n```bash\nid_rsa  (私钥文件)\nid_rsa.pub (公钥文件)\n```\n\n\n\n如果你不知道当前电脑用户名叫啥 也可以按 WIN+R 然后输入 `%USERPROFILE%\\.ssh` 可以直接打开你的密钥文件夹\n\n**3、把公钥粘贴到GitHub**\n\n登录Github、点击settings、点击SSH and GPG keys 新建 New SSH key\n\n![image-20210520150027781](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520150027781.png) \n\n打开公钥文件 `id_rsa.pub`  把里面的代码复制 粘贴到 Github\n\n![image-20210520150359470](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520150359470.png)\n\n### 创建仓库\n\n![image-20210520150613445](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520150613445.png)\n\n新建一个 Github 仓库 并且获取它的 SHH地址。\n\n由于敲命令太难懂了 所以接下来 我使用的是Git GUI给大家演示操作\n\n在上一节课 创建好的博客目录 右键选择 `Git GUI Here`  \n\n![image-20210520152309782](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520152309782.png)\n\n在弹出的菜单选择第一个 `Create New Repository`  然后选择你的博客目录 作为本地仓库目录\n\n选择好目录后点击 Create 得到下面的结果\n\n![image-20210520152726153](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520152726153.png)\n\n接下来点击 `Remote > Add`  也就是添加远程仓库地址：\n\n![image-20210520153003239](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520153003239.png)\n\nName：你的 Github 用户名  Location：你的 仓库SSH地址 填写完成 点击Add\n\n由于2020年的时候 Github 现已经把默认分支 master 改成了 main 所以接下来我们也需要修改下本地分支\n\n点击 `Branch>Rename`  后  修改成 main  点击 Rename即可 \n\n![image-20210520153559506](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520153559506.png)\n\n\n\n最后点击 `Edit > Options` 在全局 跟 单个仓库这里都填写下 你的 Github用户名 跟邮箱\n\n![image-20210520153838368](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520153838368.png)\n\n\n\n然后分别 点击 GUI上面的 1 2 3 4 5 提交就可以把代码推送到仓库了。\n\n![image-20210520154104584](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520154104584.png)\n\n\n\n第五步的时候 如果推送失败 记得勾选下 强制推送\n\n![image-20210520154245655](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520154245655.png)\n\n\n\n到这里 打开你创建的仓库就可以看到代码已经全部提交上去了，这时候网站还是没办法访问呢，因为推送的是源码\n\n\n\n### 通过 GitHub Actions 自动部署\n\n接下来就是教你如何通过 GitHub Actions 来自动部署 ，当我们把文章推送到仓库后 Github 自动帮我们部署静态页面\n\n来到 SSH 目录空白地方右键选择 `Git Bash Here`  执行下面命令 可以获得两个密钥文件\n\n```bash\nssh-keygen -t rsa -b 4096 -C \"Hexo Demo Key\" -f github-deploy-key -N \"\"\n复制上面代码执行得到文件：\ngithub-deploy-key  （私钥文件）\ngithub-deploy-key.pub  （公钥文件）\n```\n\n**GitHub 配置秘钥**\n\n我们把`私钥`放到我们存放 Hexo 原始文件的代码仓库里面，用于触发 Actions 时使用。\n把`公钥`放到 GitHub Pages 对应的代码仓库里面，用于 Hexo 部署时的写入工作。\n\n**配置私钥**\n\n首先在 GitHub 上打开创建的 demohexo 的仓库，访问 `Settings -> Secrets`，画面如下：\n\n![image-20210520160937761](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520160937761.png)\n\n\n\n配置私钥名字部分填写：`HEXO_DEPLOY_KEY`，注意大小写，这个后面的 GitHub Actions Workflow 要用到，一定不能写错。\n把 `github-deploy-key `文件的内容粘贴进来 提交\n\n\n\n![image-20210520161307462](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520161307462.png)\n\n**配置公钥**\n\n接下来我们给 demo 仓库部署公钥（当然这一步也可以单独创建一个仓库 达到源码 跟 静态网页分两个仓库存放的目的）\n我这里就不再创建了 一直把源码跟静态文件放到一个仓库 的不同分支也可以实现\n\n点击 `Settings -> Deploy keys` 按 `Add deploy key` 来添加一个新的公钥\n\n![image-20210520161927368](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520161927368.png)\n\n在 `Title` 中输入：`HEXO_DEPLOY_PUB` 字样，当然也可以填写其它自定义的名字。\n在 `Key` 中粘贴 `github-deploy-key.pub` 文件的内容。\n\n> 注意：一定要勾选 `Allow write access` 来打开写权限，否则无法写入会导致部署失败。\n\n\n\n**创建 Workflow**\n\n首先在 demo 的目录中创建一个新文件：`.github/workflows/deploy.yml`，文件名可以自己取\n\n![image-20210520162712777](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520162712777.png)\n\n但是一定要放在 `.github/workflows` 目录中，文件的内容如下：\n\n```yaml\nname: Hexo Deploy\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    runs-on: ubuntu-18.04\n    if: github.event.repository.owner.id == github.event.sender.id\n\n    steps:\n      - name: Checkout source\n        uses: actions/checkout@v2\n        with:\n          ref: main\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: '12'\n\n      - name: Setup Hexo\n        env:\n          ACTION_DEPLOY_KEY: ${{ secrets.HEXO_DEPLOY_KEY }}\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"$ACTION_DEPLOY_KEY\" > ~/.ssh/id_rsa\n          chmod 700 ~/.ssh\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          git config --global user.email \"4370142@qq.com\"\n          git config --global user.name \"htmlmi\"\n          npm install hexo-cli -g\n          npm install\n\n      - name: Deploy\n        run: |\n          hexo clean\n          hexo deploy\n```\n\n简单解释一下，当我们推送内容到远程 `main` 分支的时候，就会触发这个 Workflow。\n使用 `Ubuntu 18.04` 作为 `hexo deploy` 的系统。\n接下来就是创建 SSH 相关的配置文件，注意 `secrets.HEXO_DEPLOY_KEY` 就是对应我们之前设置的私钥，所以名字一定不要搞错。\n还有就是把 里面的 email 跟 name 改成你自己的Github信息\n\n**配置 _config.yml**\n\n最后 修改 博客根目录的 _config.yml 文件，这里注意是 根目录 不是主题目录 最下面修改成\n\n```yaml\ndeploy:\n  type: git\n  repository: git@github.com:htmlmi/hexodemo.git\n  branch: pg-hexo\n```\n\n也就是 当我们 Github Actions 工作的时候 执行的hexo d 就是把网页静态文件推送到 pg-hexo分支\n\n到这里整个教程就结束了\n\n最后就是设置 Github Pages 跟绑定域名了\n\n![image-20210520165559983](https://gitee.com/htmlmi/htmlmi/raw/master/images/image-20210520165559983.png)\n\n绑定域名后 启用HTTPS 就可以访问啦：\n\n演示地址： https://demo.timiy.cn  \n\n由于朋友那边需要 本人也仿制了一套这个主题的Wordpress版本 演示地址： http://demo.htmlmi.com/shadow\n\nWordpress 主题目前定价39元一份，主题代码不加密。购买上传即可用\n\n\n\n### 如何写文章\n\n推荐使用 Typora 来编写文章，只需要打开 `source > _posts`  目录 创建.md文件即可编写文章\n\n写完可以单独把文件上传到github 也可以使用 Git GUI推送上去 然后Github Actions 会自动帮你部署 刷新就可以看到效果了\n\n","tags":["Hexo","Github","教程","Github Actions"],"categories":["经验分享"]},{"title":"Hexo保姆及教程 学不会退款","url":"/hexocourse.html","content":"\n作为一个互联网菜鸟怎么可能没有一个自己的博客呢，但是服务器又太贵(主要是买来也是吃灰**😆**)，国内建站还需要北岸 所以使用`Hexo`白嫖`Github`来创建博客的教程就诞生了\n\n![](https://cdn.jsdelivr.net/gh/htmlmi/hexo/img/gitdemo.webp)\n\n### 教程步骤\n\n教程一共分为三个步骤：\n\n- [x] 本地搭建部署Hexo\n- [x] 选择并且设置主题\n- [ ] 通过Gtihub Actions实现持续部署\n- [ ] 通过HexoPlusPlus实现在线写作\n\n### 本地搭建部署Hexo\n\n所需用到的工具为 Git  [Git 官网](https://www.git-scm.com/)\n贴心的我 也给大家准备了 蓝奏网盘 [点我下载](https://timiy.lanzoui.com/iFE3yp11p2j)\nNode.js 下载地址：[点我下载](https://nodejs.org/dist/v14.16.1/node-v14.16.1-x64.msi)\n\nGit 跟 Node.js 安装我就不讲了 无脑下一步就行。安装完成后 我们就开始吧\n\n第一步：安装Hexo\n\n```bash\n$ npm install hexo-cli -g\n```\n\n第二部：初始化Hexo\n\n```bash\n$ hexo init demo\n```\n> 这个demo可以自己取什么名字都行\n\n第三步：进入博客目录执行\n\n```bash\ncd demo\nnpm install\n```\n\n一切完成后 再输入 `hexo server` 或 `hexo s` 即可完成本地部署\n\n> 当我们执行 代码 hexo server 后 控制台会得到 一个 `localhost:4000` 则表示成功了>\n> 打开看看 是不是完整的一个 Hexo 已经搭建成功了😋\n\n### 设置主题\n\n娶了媳妇怎么必定是要精心打扮一番才行，所以这一步我们就给Hexo设置自己心怡的主题\n今天给大家土建的一款 简洁漂亮的博客主题 ：https://linhong.me\n\n首先打开他的Github 下载主题 [hexo-theme-aomori](https://github.com/lh1me/hexo-theme-aomori)\n贴心的我 也给大家准备了 蓝奏网盘 [主题下载](https://timiy.lanzoui.com/iiq9cp12mej)\n\n下载后解压到 刚才创建的 `demo>themes` 目录下面 并改名 `hexo-theme-aomori`\n<div  align=\"left\">    \n<img src=\"https://gitee.com/htmlmi/htmlmi/raw/master/images/tool/20210511174718.png\" />\n</div>\n\n\n\n然后打开 demo 根目录的 `_config.yml` 文件 查找搜索 `theme` 修改成\n\n```bash\ntheme: hexo-theme-aomori\n```\n\n回到控制台 以后输入 `CTRL+S` 后重新刷新网页  主题已经变成新主题了\n\n![](https://gitee.com/htmlmi/htmlmi/raw/master//images/tool/20210511175553.png)\n\n具体主题使用以及修改方法 我这里就不再表述了\n可以查看主题作者的使用文档：[Aomori | 使用文档](https://linhong.me/2020/01/27/hexo-theme-aomori/)\n\n到这里 本地部署以及更换主题已经学会了吧  如果还没学会请面壁思过去😡\n\n😁😁😁 下班了 明天再写推送到 Github 以及 Gtihub Actions 自动部署\n\n","tags":["Hexo","Github","教程"],"categories":["经验分享"]},{"title":"BRIEF-极简化轻社交主题","url":"/brief.html","content":"\n一直以来都想用Hexo做一个个人博客，但苦于一直没有合适的主题，在寻找主题的过程中发现了另一个博客程序EASTER轻社交主题，但是貌似作者已经跑路了，所以参考它的模板写了一个纯静态化的Hexo主题。\n\n![](https://p.pstatp.com/origin/pgc-image/babe89323146443f86d0daeb0fafc79b)\n\n### 主题特点：\n\n- [x] 文章封面图（在首页文章摘要上显示）\n- [x] 文章特色图（在文章详细页面上置顶）\n- [x] 自定义菜单\n- [x] 自定义 favicon, logo, 头部背景, 作者头像\n- [x] 社交链接 ( 现有 steam、github、哔哩哔哩、QQ )\n- [x] 共四个插件（最新文章、分类、标签云、分享模块）\n- [x] 内容目录\n- [x] 代码高亮\n- [x] 响应式网页设计\n- [x] 懒加载\n- [x] 主题集成本地搜索\n- [x] Valine 评论系统\n- [x] Service Worker\n- [x] MacOS、IOS and Android dark mode (Safari、Chrome)\n\n### 下载\n\n暂不提供下载 后期移植到Wordpress以后 再发售\n\n预定QQ：4370142","tags":["主题","Hexo"],"categories":["Hexo"]},{"title":"拼多多自动答题脚本","url":"/pddauto.html","content":"\n由于公司最近新开了一个拼多多店铺，然后发现后台有个能力考试的入口，考试通过后会给一些相应的资源，虽然都是些垃圾资源，但文字再少也是肉啊。\n>我答题的时候发现，选错了以后会告诉你正确答案，然后再重新选正确答案即可完成答题。\n>于是乎就撸了一个脚本 先让它随便选择一个答案 然后得到正确答案再自动答题\n\n### 脚本开始\n\n脚本下载地址：\n\nhttps://timiy.lanzoui.com/ia80Gozie8j\n\n\n\n![演示图](https://p.pstatp.com/origin/pgc-image/b063d2d0698d4272880a38a7bfebfff5)\n\n\n\n### 使用方法\n\n脚本是用VG浏览器编写的，所以下载VG浏览器以后导入脚本即可 \n\n[VG浏览器]:(http://www.visualget.com)   软件是免费的\n\n1. 安装软件并且导入脚本\n2. 找到脚本右键 打开网页 选择测试当前步骤 `脚本会自动打开谷歌浏览器`\n3. 登录你的拼多多账号 并且打开答题页面\n4. 找到脚本的`循环自动答题`点右键或者按F5以后 脚本自动答题\n\n> 由于脚本的兼容性 一个题项答题以后 请手动点击确认并且打开下一个题\n>\n> 如果还不明白请联系我\n\n\n\n最后需要定制脚本的也可以联系我  QQ：4370142","tags":["拼多多","脚本"],"categories":["作品开发"]},{"title":"机器人自定义变量说明","url":"/variable.html","content":"鲨鱼酱是一款高智能的全自动AI机器人，具有高度自定义的变量，可帮助你实现更多高级功能\n本文档仅用于你不会用的时候做参考学习，如有错误欢迎留言提出，**文档正在逐渐完善，敬请期待**\n\n### 常用变量\n<font color=\"red\">【艾特】</font>变量说明：\n<font color=\"red\">【艾特】</font>放在关键词中，表示 艾特机器人。\n<font color=\"red\">【艾特】</font>放在回复中，表示 艾特发送者。\n如果想艾特指定人，[CQ:at,qq=xxx] xxx改为要@的人的QQ就行了。\n\n<font color=\"red\">【内容】</font>变量说明：\n<font color=\"red\">【内容】</font>填写在回复中，表示子关键词，子关键词与匹配规则相关，具体见下个说明（匹配规则说明）。\n<font color=\"red\">【子关键词=[内容]】</font> 可以把[内容]赋值给变量【内容】\n\n### 匹配规则说明\n<font color=\"red\">完全匹配</font> 所设关键词和发言一致时(区分大小写)，匹配成功。完全匹配不存在子关键词。\n<font color=\"red\">模糊匹配</font> 所设关键词包含于发言中(不区分大小写)，匹配成功。子关键词是发言中非关键词的部分。\n<font color=\"red\">前缀匹配</font> 所设关键词是发言的前缀(区分大小写)，匹配成功。子关键词是发言中的非前缀的部分。\n<font color=\"red\">正则匹配</font> 所设关键词(即表达式)与发言相匹配时（匹配规则为完全匹配），匹配成功。子关键词是第一个子表达式(第一对英文括号括起来的表达式)所匹配的内容。\n若想取出其余子表达式匹配的结果，可用：<font color=\"red\">【内容x】</font>，其代表正则表达式匹配的第x个子表达式匹配的文本。\n\n### 高级匹配规则\n<font color=\"red\">多匹配规则</font>：\n在前三个匹配规则中，关键词添加前缀[多条]，即可开启多匹配。多匹配规则中，多个关键词之间用\"|\"分隔，只要其中一个关键词匹配，即匹配。\n若要匹配\"|\"，用\"#hz\"代替。与\"||\"分割符不同的是，用\"||\"分割实际是自动添加多条回复，而本规则只在同一条回复下。\n<font color=\"red\">正则的查找匹配规则</font>：\n在最后一个匹配规则(正则匹配)中，关键词添加前缀[查找]，即可开启查找匹配。\n<font color=\"red\">查找匹配规则</font>：\n当表达式所能匹配的文本在发言中，即为匹配。（不加[查找]是完全匹配规则，即表达式完全与发言相匹配）\n\n在回复中，以下变量将被替换为特定内容\n<font color=\"red\">【换行】</font> 即换行符。\n<font color=\"red\">【关键词】</font>即匹配到的关键词\n<font color=\"red\">【头像(-大/中/小/超小)】</font>发送者QQ头像,省略默认为“-中”。\n<font color=\"red\">【随机表情】</font>随机一个表情\n<font color=\"red\">【msgID】</font> 触发消息的ID。\n<font color=\"red\">【msg】</font> 触发的消息。\n<font color=\"red\">【msg [ID]】</font> 获取指定ID的消息，当[ID]为负数或0时，获取向前第[ID]条消息。\n当[ID]为正数时，获取指定msgID为[ID]的消息。注意msg后要加空格。\n<font color=\"red\">【当前群号/群名/群人数/群上限】</font>发送者所在群号/群名/群人数/群人数上限\n<font color=\"red\">【发送者QQ/昵称】</font>发送者的QQ/昵称\n<font color=\"red\">【权限】</font>发送者权限。分别为：主人/群主/群管/管理/群员\n<font color=\"red\">【机器人名字/QQ】</font>机器人的昵称/QQ\n<font color=\"red\">【发送者名片/性别/年龄/地区/加群时间/发言时间/管理权限/专属头衔/活跃等级】</font>\n取发送者的特定信息，只能在群聊下触发。\n注：加群/发言时间取出来的是时间戳。 管理权限分为：群主/管理/成员。 活跃等级即活跃头衔的名称。\n\n### 转义\n注意：<font color=\"red\">【  】  * </font>    这三个符号填写在回复中有特殊含义\n<font color=\"red\">【】</font> 括起来的内容将被自动转义，如果未匹配返回空文本。\n<font color=\"red\"> * </font> 是用来分割多个回复。\n如果需要发送这些字符请先替换为对应的转义字符\n#zzk    代表【\n#yzk    代表】\n#xh     代表*\n<font color=\"red\">【反转义xxx】</font>  将xxx中的#zzk #yzk #fgf 转义为【 】 ### =。\n<font color=\"red\">【转义xxx】</font>  将xxx中的【 】转义为#zzk #yzk。\n<font color=\"red\">【CQ反转义xxx】</font>  将xxx中的 &amp;amp; &amp;#91; &amp;#93; 转义为 & [ ] \n<font color=\"red\">【CQ转义xxx】</font>  将xxx中的 & [ ] 转义为 &amp;amp; &amp;#91; &amp;#93;\n\n### 事件变量\n下面变量请填到关键词中，接收到对应事件后会调用对应关键词下的回复(请带上[])。\n<font color=\"red\">[被撤管理]</font> 被撤销管理时调用，被撤销者相当于发送人\n<font color=\"red\">[提升管理]</font> 被提升管理时调用，被提升者相当于发送人\n<font color=\"red\">[群员被踢]</font> 群员被踢时被调用，被踢出者相当于发送人\n<font color=\"red\">[群员离群]</font> 群员离开群时调用，离群者相当于发送人\n<font color=\"red\">[群员入群]</font> 群员加入群时调用，入群者相当于发送人\n<font color=\"red\">[上传文件]</font> 上传群文件时调用，上传者相当于发送人\n<font color=\"red\">[已加好友]</font> 被添加好友时调用，添加者相当于发送人\n<font color=\"red\">[禁言事件]</font> 群员被禁言或解禁时调用，被禁言/解禁者相当于发送人。如果为全员禁言/解禁则发送人为 0 \n注释：这里的发送人是指，相当于他触发了这个关键词。\n<font color=\"red\">[初始化xx]</font> xx可自定义，自定义在启动时将调用所有的初始化事件。注意需要设置群聊触发。\n<font color=\"red\">[退出xxx]</font> xx可自定义，自定义在退出或停用时调用所有的退出事件。注意需要设置群聊触发。\n\n在<font color=\"red\">[群员被踢]、[群员入群]</font>事件下，<font color=\"red\">【内容】</font>表示操作者QQ\n在<font color=\"red\">[上传文件]</font>事件下，<font color=\"red\">【内容】</font>表示上传文件名称，<font color=\"red\">【内容2】</font>表示长传文件的大小。\n在<font color=\"red\">[禁言事件]</font>事件下，<font color=\"red\">【内容】</font>表示禁言时间（单位秒），为0表示解禁；<font color=\"red\">【内容2】</font>表示操作者。\n\n\n### 群管变量\n以下变量填在回复中，触发对应关键词后，让机器人去做对应的事件（默认被操着者为发送人）\n<font color=\"red\">【禁言[时间](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[QQ])】</font>触发后，禁言[QQ][时间]分钟, [时间]为0时表示解禁，省略默认[QQ]为触发者\n<font color=\"red\">【踢出(QQ)】</font>触发后，踢出[QQ]，省略默认[QQ]为触发者\n<font color=\"red\">【永久踢出(QQ)】</font>触发后，踢出[QQ]（同时设置不在接受入群请求），省略默认[QQ]为触发者\n<font color=\"red\">【拉黑(QQ)】</font>拉黑[QQ] ，省略默认[QQ]为触发者\n<font color=\"red\">【拉黑-警告(QQ)】</font>警告[QQ] 上限后拉黑，省略默认[QQ]为触发者\n<font color=\"red\">【踢出-警告(QQ)】</font>警告[QQ] 上限后踢出，省略默认[QQ]为触发者\n<font color=\"red\">【点赞(QQ)】</font> 点赞[QQ]，省略默认[QQ]为触发者\n<font color=\"red\">【改名片[QQ]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[改后名片]】</font> 更改[QQ]的群名片为[改后名片]\n<font color=\"red\">【设头衔[头衔名称](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[有效时间]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被改QQ])】</font> 更改[被改QQ]头衔为[头衔名称]持续[有效时间]天。(有效时间暂时无用!)\n<font color=\"red\">【设管理[被设QQ](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取消])】</font> 加上后面的，取消管理，否则设为管理。\n<font color=\"red\">【撤回(msgID)】</font> 撤回ID为msgID的消息。省略默认撤回触发回复的消息。\n<font color=\"red\">【艾特全体】</font>艾特全体成员\n\n### 系统处理\n<font color=\"red\">【cmd ([等待])[命令]】</font>执行CMD命令。 如：<font color=\"red\">【cmd notepad】</font>  （运行记事本）\n<font color=\"red\">【运行([等待])[命令]】</font>让windows运行指定命令（将根据输入的[命令]打开相应程序/文件夹/文档/Internet资源）。\n<font color=\"red\">       [等待]说明：</font>[命令]前加上[等待]系统将等待命令执行结束。这里[]不要省略。不加则不等待执行结束。\n<font color=\"red\">【dos [命令行]】</font>取系统DOS执行结果。注意: 该命令会阻塞 ,一直到cmd中的内容执行完毕后才会返回。\n<font color=\"red\">【延时[秒]】</font>表示让系统等待[秒]秒后继续执行。\n<font color=\"red\">【延迟[秒]】</font>同上，在Web函数操作中请使用【延迟】代替【延时】。\n<font color=\"red\">【调试[待调试内容]】</font>在日志中输出[待调试内容]。\n<font color=\"red\">【线程执行[函数名]】</font>启动一个新的线程来执行函数名为[函数名]的函数。\n<font color=\"red\">[执行时间]</font>代表回复代码执行的时间。\n<font color=\"red\">【挂起[分钟]】</font>将后续代码延迟[分钟]后执行(若要发送请使用输出流)，前面代码立即输出。本变量不占用线程，可无限添加。\n<font color=\"red\">【许可-创建】</font>创建并返回一个进入许可证ID数值，此许可证ID值用作进入程序中的指定许可代码区，以避免多线程冲突。\n成功返回非零整数值，失败返回0，推荐在初始化事件下使用，并且赋值给常量。\n<font color=\"red\">【许可-进入[许可证ID]】</font>根据已经创建的许可证进入指定许可代码区。\n在此线程未退出之前，其它线程如要通过同一个进入许可证进入该许可代码区则必须先等待此线程退出许可代码区，从而保证了指定许可代码区在任何时候都只能有一条线程进入并执行。\n<font color=\"red\">【许可-退出[许可证ID]】</font> 指示当前线程将退出许可代码区，并允许其它使用同一进入许可证的线程进入此许可代码区。\n<font color=\"red\">【许可-删除[许可证ID]】</font> 删除由“可证-创建”函数所创建返回的许可证。\n\n\n### 私聊变量\n<font color=\"red\"> [私聊xxx]</font>说明：\n<font color=\"red\"> [私聊XXX]</font>向指定人(XXX)发送此变量后面的信息，前面的正常发送。 \n<font color=\"red\"> [私聊XXX]</font>需要加[]，xxx可以为【发送者QQ】，来私聊触发者。\n\n### 回复限制\n<font color=\"red\"> 说明：</font>填写在回复中，限制该条回复。\n<font color=\"red\">【一天上限[次数]】</font>填在回复中，表示该关键词单Q一天只能触发[次数]次\n<font color=\"red\">【一周上限[次数]】</font>填在回复中，表示该关键词单Q一周只能触发[次数]次\n<font color=\"red\">【一月上限[次数]】</font>填在回复中，表示该关键词单Q一月只能触发[次数]次\n<font color=\"red\">【一次间隔[时间]】</font>填在回复中，表示该关键词在[时间]分钟内只能触发1次\n<font color=\"red\">【回复间隔[时间]】</font>经过[时间]秒后，才可继续触发下一条含有回复间隔的回复。在此期间，无法触发含有回复间隔的回复。\n\n### 主人/群管回复\n<font color=\"red\">说明：</font>填写在回复中，符合指定条件的人才可以触发本条回复。\n<font color=\"red\">【主人】</font>只有主人才能触发此条回复。\n<font color=\"red\">【群管】</font>只有主人或当群群管（机器人管理而非群管理员）才能触发此条回复。\n<font color=\"red\">【管理】</font>只有管理或群主或群管或主人才能触发此条回复。\n\n### 链转图片\n<font color=\"red\">【图片[来源]】</font>说明：\n<font color=\"red\">【图片[来源]】</font>填在回复中，将[来源]转变成图片发送。来源可以是文件路径，可以是资源URL。\n当[来源]填写为某个文件夹的路径时，则从该文件夹下随机一个文件转变成图片发送。\n\n### 链转语音\n<font color=\"red\">【语音[来源]】</font>说明：\n<font color=\"red\">【语音[来源]】</font>填在回复中，将[来源]转变成语音发送。来源可以是文件路径，可以是资源URL。\n当[来源]填写为某个文件夹的路径时，则从该文件夹下随机一个文件转变成语音发送。\n\n### 本地词库\n<font color=\"red\">说明：</font> 下述三类变量将调用本地的文本词库。\n<font color=\"red\">词库统一格式：</font><a href=\"http://myepk.club/ck.txt\">自定义词库格式</a>\n<font color=\"red\">词库编码必须为<B>ANSI编码</B>（即 GB系列编码）</font>\n<font color=\"red\">【本地词库】</font>说明：\n<font color=\"red\">【本地词库】</font>填写在回复中，如果触发变量，则从词库中找出与子关键词匹配的回复（子关键词包含词库中的关键词即为匹配），之后从所有匹配中随机取出一条，同时将取出的回复的行数赋值到【行序】变量中。\n<font color=\"red\">【本地词库[词库路径]】</font>则表示调用路径更改为[词库路径]，省略[词库路径]调用数据目录下的\"本地词库.txt\"\n<font color=\"red\">【高级词库】</font>说明：\n<font color=\"red\">【高级词库[词库路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出格式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[匹配方式]】</font> 即本地词库的升级版，详见参数。\n<font color=\"red\">[取出格式]</font> 可为(-)topX/botX/rdmX/all/X；X代表数值，前面\"-\"(负号)可有可无，总共10中组合方式：\ntopX：取出符合的前X条；-topX：取出符合的前X条，并且取出结果反转（即结果顺序反转）\nbotX：取出底部X条；rdmX：取出随机X条；all：取出全部。前面加上\"-\"结果反转。\nX(单独的一个数)：取出第X条符合的；为负取出倒数第|X|条；为1时执行效率最高，同时还将取出的回复的行数赋值到【行序】变量中。\n<font color=\"red\">[匹配方式]</font> 即按照什么样的匹配规则来判断匹配。可选参数如下：\n模糊匹配、完全匹配、前缀匹配、绝对正则、查找正则。\n前三者：子关键词包含词库中的关键词/子关键词的前缀是词库中的关键词/子关键词和词库中的关键词相同，即匹配。\n绝对正则：子关键词完全符合表达式即匹配。查找正则：只要子关键词中的某段文本符合表达式即匹配。\n省略第一个参数，则词库路径默认为应用目录下的 高级词库.txt。省略第二个参数，随机取出一条。省略第三个参数，默认模糊匹配。\n<font color=\"red\">【标签词库】</font>说明：\n<font color=\"red\">【标签词库】</font>填写在回复中，如果触发变量，则从标签词库中找出与标签符合的内容（子关键词包含标签词库中的标签即为符合）\n（包含的标签越多，符合度越高，结果按照符合度从高到低排序），之后从所有结果中取出符合指定符合度的指定条。\n<font color=\"red\">【标签词库[标签词库路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出最大条数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出最小符合度]】</font>取出[标签词库路径]中，[取出最大条数]条子关键词中最少含有标签[取出最小符合度]个标签的一系列记录。\n[取出最小符合度]指的是：子关键词包含一个标签即一个符合度，筛选出子关键词中至少含有[取出最小符合度]个标签的记录。\n省略第一个参数，则词库路径默认为应用目录下的 标签词库.txt。省略第二个参数，取出所有符合的。\n省略第三个参数，只取出最大符合度的一系列记录。第三个参数为-1时，只取出完全符合所述标签的一系列记录。\n<font color=\"red\">三种词库的内存调用：</font>\n使用内存调用词库可以提升30倍以上的速度，并且内存词库路径支持URL，但是修改词库内容必须重新载入才可执行新词库（重启插件或点击保存或执行初始化变量）\n使用方法如下：词库变量后加上“-内存”即可，如【本地词库-内存】、【标签词库-内存xxxx】、【高级词库-内存xxxx】。\n\n### 内置词库\n<font color=\"red\">说明：</font>以下两者为插件自带词库，用法同【本地词库】\n<font color=\"red\">【聊天女仆】</font>\n<font color=\"red\">【图灵(APIkey)】</font> 省略则使用默认 APIkey\n\n### 内置音源\n<font color=\"red\">【度丫丫】</font>说明：\n<font color=\"red\">【度丫丫】</font>填在回复中，可以将回复的内容转换成度丫丫的语音（语音合成）\n\n### 语音时代\n<font color=\"red\">说明：</font>\n<font color=\"red\">对接语音时代</font> 支持调用语音时代的词库和音源。\n详情请下载文档：<a href=\"http://myepk.club/LD.docx\">铃心自定义-语音时代  开启说明.docx</a>\n\n### 未匹配回复\n<font color=\"red\">【其他】</font>说明：\n<font color=\"red\">【其他】</font>填在关键词中，\n如果发送的消息匹配不到关键词，会触发关键词为<font color=\"red\">【其他】</font>的回复。\n\n### 随机一言\n<font color=\"red\">【随机一言】</font>说明：\n<font color=\"red\">【随机一言】</font>填写在回复中，从指定文本中随机选出一条(一行属于一条)。\n指定文本：本插件应用目录下: 随机一言.txt\n\n### 关键词监控\n<font color=\"red\">[一/二/...五级敏感词]、【自定义组一/二/三】</font>说明\n请配合关键词监控使用！\n关键词监控：监控发言是否存在已设关键词，如果存在，将关键词所属组作为新的消息。\n如：敏感词监控 一级敏感词 添加“测试”  然后如果机器人接收到含有测试的消息 \n则将本条消息看做 <font color=\"red\">[一级敏感词]</font> ，然后调用关键词为<font color=\"red\">[一级敏感词]</font> 下的处理方式和回复。\n\n### 数据类\n<font color=\"red\">【积分(±X)】</font>说明：填写在回复里，X表示具体的数或变量。\n<font color=\"red\">【积分+X】</font>表示触发该回复积分+X, 并且返回对应的X。\n<font color=\"red\">【积分-X】</font>表示触发该回复减少X积分，并返回对应的X，积分不够则会提示积分不足。 \n<font color=\"red\">【积分】</font>表示触发者当前积分。\n<font color=\"red\">【积分(±X)<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[指定QQ]】</font> 在后面加上 <font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[指定QQ]   相当于把触发者换成[指定QQ]\n<font color=\"red\">【数据[数据名]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[改动方式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[改动内容]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[改动类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[数据类型]】</font> 对目标数据进行增删改查以及获取排行等。\n[数据名]：自定义的数据名称。\n[改动方式]：为“增加/减少/更改/获取/排行”之一，可空，默认获取。\n[改动内容]：要“增加/减少/更改”的数值。方式为“排行”时，代表取出的个数。可空。\n[改动类型]：1：群，同一个群共用一个数据。 2：QQ，同一个QQ共用一个数据； 3:群内QQ，同一个群的不同QQ用不同的数据。可空，默认3。\n[参数值]：“增加/获取”时，[参数值]代表初始值。“减少”时，[参数值]代表最小值。可空，默认0\n[数据类型]：0：数值；1：文本，若为文本，“减少/排行”无效；2：每日刷新的数值，每日会重置数值为默认值。可空，默认0\n返回值：为数值时，“增加/减少” 将返回修改后结果，若“减少”后小于最小值，返回假。\n\n### 传递变量\n<font color=\"red\">【传递】、【传递变量(x)】</font>说明：全部填写在回复中\n将回复用<font color=\"red\">【传递】</font>分割成若干条，最终输出的是最后一条的结果。\n若某条中存在<font color=\"red\">【传递变量】</font>则该变量的值表示上一条的执行结果。\n若某条中存在<font color=\"red\">【传递变量x】</font> x为数字，则该变量的值表示第x条的执行结果(x必须小于当前条序)。为负值时，表示当前位置向前第|x|条执行结果。\n使用<font color=\"red\">【跳出传递】</font>可跳过传递。\n使用<font color=\"red\">【内返回[返回结果]】</font>可重置当前传递为[返回结果]。\n\n### 自定义变量\n\n<font color=\"red\">【变量[自定义名称]】</font>说明：\n<font color=\"red\">【变量[自定义名称]】</font>调用获取变量[自定义名称]的值。可把【变量[自定义名称]】写在关键词里，来给变量初值。\n<font color=\"red\">【更新变量[自定义名称]】</font>重新来获取变量[自定义名称]的初值。\n<font color=\"red\">【赋值变量[自定义名称]<font size=\"2\" color=\"blue\"><B>### =</B></font>[赋值内容]】</font>将[赋值内容]赋值给变量[自定义名称]\n\n### 自定义常量\n\n<font color=\"red\">【常量[自定义名称]】</font>说明：\n<font color=\"red\">【常量[自定义名称]】</font>调用获取常量[自定义名称]的值。可把【常量[自定义名称]】写在关键词里，来给常量初值。\n<font color=\"red\">【更新常量[自定义名称]】</font>重新来获取常量[自定义名称]的初值。\n<font color=\"red\">【赋值常量[自定义名称]<font size=\"2\" color=\"blue\"><B>### =&lt;</B></font>[赋值内容]】</font>将[赋值内容]赋值给常量[自定义名称]。\n补充说明：常量即全局变量，在全局生效。而变量仅在当前回复下生效。\n\n### 自定义函数\n\n1、增加函数：<font color=\"red\">【函数[函数名称]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[代码体]】</font>\n2、增加全局函数：<font color=\"red\">【函数全局[函数名称]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[代码体]】</font>\n3、执行函数：<font color=\"red\">【[函数名称][参数1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数2]...】</font>\n4、代码体内可以用[参数1]、[参数2]...来代替传进来的参数。\n5、两者函数一旦增加成功，都全局生效，除非重启插件。\n6、两者区别是：执行增加已添加的全局函数会直接跳过，而非全局函数则会替换。\n7、推荐在初始化事件中执行增加函数。\n8、举例：【函数测试<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数1]+[参数2]的结果为：【计算[参数1]+[参数2]】】  【测试1<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>2】\n\n### 文档操作\n\n<font color=\"red\">【取出一行[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[行数]】</font>从[来源]中取出第[行数]行文本。如果[行数]为 0 则随机取出一行。如果[行数]为负，取出倒数第|[行数]|行\n<font color=\"red\">【删除一行[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[内容]】</font>当[内容]为行数时，从[来源]中删除第[内容]行文本。如果[内容]为负，删除倒数第|[行数]|行\n当[内容]为文本时，从[来源]中删除第一次出现[内容]的这一行。 如果[内容]省略或为0 删除最后一行。\n<font color=\"red\">【取出行数[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[指定文本]】</font> 取出[指定文本]在[来源]的行数，失败返回-1 。如果省略最后一个参数，取出[来源]总行数\n<font color=\"red\">【插入一行[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[插入内容]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[行数]】</font>将[插入内容]插入到[来源]第[行数]行之前，\n如果省略最后一个参数，插入到最后一行后。如果[行数]为负，插入到倒数第[行数]行前。\n<font size=\"2\" color=\"blue\"><B>注：</B></font>所有的[来源]均可以为文件路径、网络链接、一串文本。 如果是文件路径，插入/删除时返回的是插入/删除的那一行，非文件路径返回的是整个文本。\n文档编码请使用ANSI编码（即GBK GB2312 GB18030）\n<font color=\"red\">【行序】</font>表示上一次取出一行变量所取文本的行序。\n\n### Json解析\n\n<font color=\"red\">说明：</font> 对Json文本进行解析。\n<font color=\"red\">【Json解析[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[属性路径表达式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出属性]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[属性选择器]】</font> 将[来源]解析并按照指定路径表达式取出指定格式文本。\n[来源]：可以为文本路径（必须ansi编码）/Json文本/网络URL。 \n[属性路径表达式]：可以为以下格式： [0].a.b.c/a[1].a.b[2].c/[all].a.b.c[all]  包含[all]则取该属性下所有子属性。\n[取出类型]：可以为[取出所有]  [随机取出]  [随机取x]  [取出前x]  [取出后x]，即取出所有匹配结果/随机取出/随机取x条/取前x条/取后x条。为空取所有，请带上[]。\n[取出属性]：可以为以下格式：a/a|b|c  或者填写[所有属性]取全部属性，请带上[]。为空取父属性。\n[属性选择器]：筛选出符合选择器的结果。为空不筛选。多个选择器用|(或者) 或 &(并且) 分隔。\n选择器格式：[Rx][比较符号][比较参数]。[Rx] 中 x 表示多个属性中的第x个属性。[比较参数]、[Rx] 都需要加上[]。\n[比较符号]包括：=(值等)、==(全等)、!=(不等)、&gt;=(大于等于)、&lt;=(小于等于)、&gt;(大于)、&lt;(小于)、in(包含)、!in(不包含)、offin(被包含)、!offin(不被包含)、reg(正则匹配)、!reg(正则不匹配)\n如：【Json解析{\"data\":[15,20,30,50,100]}&gt;=&lt;data[all]&gt;=&lt;&gt;=&lt;&gt;=&lt;[R1]>[20]】\n在取出结果中，多条换行分割开，多个属性\"|\"分割开，数组多个成员\",\"分割开。\n\n### 浏览器支持\n\n<font color=\"red\">说明：</font> 本类函数需要下载“<a href=\"https://www.lanzous.com/iat17yb\">node.dll</a>”放在 bin 目录。\n<font color=\"red\">【Web-创建[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[UA标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[是否全局]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[宽高]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[Cookies]】</font>以指定UA和cookie打开指定网页，返回对应Web标识，以供下面函数调用。\n[宽高]格式：（宽，高），若空为屏幕宽高。 [是否全局]：若为真，则打开相同的来源则直接获取上一次打开的。\n<font color=\"red\">【Web-截图[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[左边]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[顶边]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[宽度]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[高度]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[质量]】</font>以指定宽高位置来截取网页。[质量]为1-100整数。\n[左边]、[顶边]：可空，默认0 。[宽度]、[高度]：可空，默认由创建指定的宽高。\n<font color=\"red\">【Web-获取[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[欲获取属性]】</font>获取指定Web属性，[欲获取属性]可为：标题、网址、UA、Cookie、源码、下载链接。\n<font color=\"red\">【Web-读取[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[JS选择器]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[框架ID]】</font>通过[JS选择器]获取指定元素的文本元素，若多个返回首个。\n<font color=\"red\">【Web-Act1[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[动作]】</font>执行浏览器动作，[动作]包括：前进、后退、刷新、停止、清除Cookie。\n<font color=\"red\">【Web-Act2[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[动作]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[动作参数]】</font>执行带参数的浏览器动作，并为其传递参数。\n[动作]包括：缩放(倍率)、左右滚动(长度)、上下滚动(长度)、设Cookie(Cookie)、设UA(UA)。括号里的表示[动作参数]的意义。\n<font color=\"red\">【Web-代理[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[代理类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[代理地址]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[用户名]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[密码]】</font> 设置当前Web代理，[代理地址]：ip:端口。\n[代理类型]：0 无代理、1 Http代理、2 Socks4代理、3 Socks4A代理、4 Socks5代理、5 Socks5HostName代理。\n<font color=\"red\">【Web-JS运行[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[JS代码]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[框架ID]】</font>在指定网页运行指定的JS代码， 最外层的return可代表本函数返回。\n<font color=\"red\">【Web-JS执行[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[JS函数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[框架ID]】</font>在指定网页执行指定的JS函数，格式如： xxxx(xx,xxx)。\n<font color=\"red\">【Web-编码[Web标识]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[编码]】</font> 为指定Web设置返回的文本编码，支持：utf-8、ansi\n<font color=\"red\">【Web-释放[Web标识]】</font>释放指定Web内存。\n注：1.[Web标识]可以为空，在用JS编程的时候，空置[Web标识]将处理的更快速。\n    2.[框架ID]在有iframe元素时使用，表示在第[框架ID]个iframe元素中运行函数。\n\n### JS解析\n\n<font color=\"red\">说明：</font> 解析JS代码并调用目标方法。\n<font color=\"red\">【JS解析[来源]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[JS方法]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数2]...】</font> 将[来源]解析并执行指定方法。\n[来源]：可以为文件路径/JS代码/JSurl。\n[JS方法]：不必要带括号。\n[参数]：可以有多个，也可以没有。\n注意：传递的参数类型都是字符串型，在调用时请注意类型转换。\n\n### SQL操作\n\n<font color=\"red\">说明：</font> 对sqlite数据库进行读取或者执行SQL语句，不存在自动创建。\n<font color=\"red\">【SQL-执行[数据库路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[SQL语句]】</font> 多个[SQL语句]之间请以半角分号“;”隔开\n<font color=\"red\">【SQL-读取[数据库路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[SQL语句](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结果字段1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结果字段2]...)】</font> [结果字段]参数可无限添加，返回的结果中多个字段';'分隔，多条记录换行分割。\n多个字段时，中的';' 被替换成 '#fh' 注意自行转换。省略结果字段取结果所有字段。\n若读取多条多个字段的数据，推荐用'fori'和'分割取出'处理。\n\n### 文件操作\n\n<font color=\"red\">【读入[文件路径]】</font> 读入指定位置的文件，返回文本形式。\n<font color=\"red\">【写出[欲写内容]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[文件路径]】</font> 将[欲写内容]写入[文件路径]。（不存在文件自动创建，不存在目录自行创建）\n<font color=\"red\">【读配置[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[配置节]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[配置项]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[默认值]】</font>  读取指定[文件路径]配置文件中指定[配置节]下[配置项]的值。不存在默认为[默认值]\n<font color=\"red\">【写配置[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[配置节]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[配置项]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[写入值]】</font>  写入指定[文件路径]配置文件中指定[配置节]下[配置项]的值。 <font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[配置项] 省略则删除配置节下内容。  <font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[写入值] 省略则删除配置项。\n<font color=\"red\">【取配置[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[配置节]】</font>取出指定[配置节]下所有内容。\n<font color=\"red\">【取配节[文件路径]】</font>取出指定[文件路径]下所有配置节。\n\n### 常用变量2\n\n<font color=\"red\">【随机数X-Y】</font> 取X-Y之间的一个随机数(不支持负数) \n<font color=\"red\">【随机数X<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>Y】</font> 取X-Y之间的一个随机数(支持负数) \n<font color=\"red\">【补位随机数X-Y】</font> 取X-Y之间的一个随机数，并且生成的随机数位数与y相同，位数不够高位补零。\n<font color=\"red\">【随机字符】</font> 取一个随机字符（a-z,A-Z,0-9）\n<font color=\"red\">【运行目录】</font> 取当前机器人运行目录（结尾不带\\）。\n<font color=\"red\">【应用目录】</font> 取插件配置的文件目录（结尾带有\\）。\n<font color=\"red\">【机器人Cookie([目标域名])】</font> 取机器人在[目标域名]上的Cookies。请谨慎使用！\n<font color=\"red\">【机器人CsrfToken】</font> 取机器人CsrfToken 谨慎使用！\n<font color=\"red\">【图链】</font> 代表机器人接收到的上一个图片的链接。\n<font color=\"red\">【图链[目标]】</font> 提取[目标]的图片链接，支持酷Q图片码、文件路径。\n<font color=\"red\">【图链[目标]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>二维码】</font> 提取[目标]二维码链接,支持酷Q图片码、文件路径。\n<font color=\"red\">【初始化】</font> 触发后重新加载数据（利用变量修改配置后请调用）\n<font color=\"red\">【序号】</font> 每次触发后,【序号】的值+1 ,从1开始(此变量只在同一回复下递增),可用【序号x】将【序号】的值改为x。\n\n### 网页访问变量\n\n<font color=\"red\">【访问(-GBK/UTF)[网址]】</font> GBK/UTF是目标网址的编码方式，返回网页源码。\n<font color=\"red\">【超级访问-[GET/POST]-[GBK/UTF][网址]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交数据]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交Cookies]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[附加协议头]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[字节集提交]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[代理地址]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[禁止重定向]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回Cookie]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回协议头]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回字节集]】</font>  利用WinInet 访问网页  返回网页源码。\n<font color=\"red\">【对象访问-[GET/POST]-[GBK/UTF][网址]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交数据]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交Cookies]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[附加协议头]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[代理地址]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[禁止重定向]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回Cookie]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回协议头]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回字节集]】</font>  利用WinHttp对象 访问网页  返回网页源码。\n[GET/POST]:可空，空置的时候需要连带前面的'-'一起省略，默认GET。\n[GBK/UTF]：可空，空置的时候需要连带前面的'-'一起省略，默认自动解码。\n[网址]：欲获取源码的网址。\n[提交数据]：可空。\n[提交Cookies]：可空。\n[附加协议头]：可空。\n[字节集提交]：即提交字节集的文本形式，可空。\n[代理地址]：格式：IP:端口，可空。\n[禁止重定向]：可为 真/假，可空，默认假。\n[返回Cookie]：将返回的cookie储存在变量[返回Cookie]中，可空。\n[返回协议头]：将返回的协议头储存在变量[返回协议头]中，可空。\n[返回字节集]：若非空则本函数无返回，将返回到的字节集存放在变量[返回字节集]中，返回的变量可填在“图片/语音/写出/取MD5/HexE/转为文本/编码BASE64”中，可空\n<font color=\"red\">【验证图片[URL]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>([提交cookie]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交方式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[提交协议头])】</font>  提交验证信息获得图片，可用于获得验证码等， [提交方式] 0:GET; 1:POST ,后四个参数可空。返回图片。\n\n### 文本编码\n\n<font color=\"red\">【编码(-真/假-真/假)XXX】</font>将XXX编码为URL编码。第一个真/假为 是否不编码数字和字母  第二个真/假为 是否先转换为UTF-8再编码。获得对应的编码,省略默认“-真-真”。\n<font color=\"red\">【编码到USC2XXX】</font>将XXX编码为USC2编码\n<font color=\"red\">【解码USC2XXX】</font> 将XXX USC2解码\n<font color=\"red\">【解码URL1XXX】</font> 将XXX URL解码(UTF-8)\n<font color=\"red\">【解码URL2XXX】</font> 将XXX URL解码(GBK)\n<font color=\"red\">【解码HTMLXXX】</font> 将XXX 中的HTML转义字符转化成原本格式。（即 以\"&\"开头以\";\"结尾的字符串）\n<font color=\"red\">【HexE[要编码文本]】</font>  将[要编码文本]用哈希值（16进制）编码。\n<font color=\"red\">【HexD[要解码文本]】</font>  用哈希编码解码[要解码文本](16进制文本)\n<font color=\"red\">【转码[转码类型]XXX】</font> 将XXX 进行指定转码。\n目前[转码类型]可为 简-繁/繁-简/U8-GB/GB-U8 （U8为UTF8,GB为GBK） \n<font color=\"red\">【转为文本[字节集]】</font> 将读取的字节集转换为文本（GBK编码）[字节集]支持：[BIN]、通过“读BIN/超级访问/对象访问”返回的变量。。\n\n### 图片码\n\n<font color=\"red\">图片码转义</font> 发送消息时自动将图片码解析为图片。参数用法同【图片xxx】\n<font color=\"red\">格式：</font>[Pic={来源}]  {来源}可为URL或路径或目录，若为目录随取。请不要加{}。\n\n### Unicode字符\n\n<font color=\"red\">Unicode转义</font>  以下格式的代码将被转义成Unicode字符，具体如何转换自行百度--中文转Unicode：\n<font color=\"red\">格式1：</font>[Unicode=&amp;#582;&amp;#11363;&amp;#42816;]\n<font color=\"red\">格式2：</font>[Unicode=&amp;#x247;&amp;#x1D7D;&amp;#xA741;]\n<font color=\"red\">格式3：</font>[Unicode=\\u0246\\u2c63\\ua740]\n\n### 算法计算\n\n<font color=\"red\">【分割排序[排序文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[分割符号]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[依据序号]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[排序正逆]】</font>  将[排序文本]每行中的文本用[分割符号]分隔成多部分，并且按照第[依据序号]个排序。[依据序号]可空，默认1。[排序正逆]支持：[正序]、[逆序]\n<font color=\"red\">【随机排序[排序文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[分割符号]】</font>  将[排序文本]以[分割符号]为界限，随机进行排序。[分割符号]：可空，默认换行。\n<font color=\"red\">【文本加密[要加密文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[密码]】</font>  用[密码]加密[要加密文本]，密码可空\n<font color=\"red\">【文本解密[要解密文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[密码]】</font>  用[密码]解密[要解密文本]，密码可空\n<font color=\"red\">【统计[被统计文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[统计出现的文本]】</font>  统计[统计出现的文本]在[被统计文本]中出现的次数\n<font color=\"red\">【取MD5[被取目标](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[MD5位数])】</font> 取出目标MD5（大写）\n[被取目标]可为[BIN]/[图BIN]  可为一串文本  可为文件路径  可为网络URL  可为CQ码  可为【图片XXX】/【语音XXX】\n<font color=\"red\">【权重随机数[权重类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[权重数值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[最小值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[最大值]】</font> 获取某种类型的权重随机数，具体如下：\n[权重类型] 可为：[等差]  [等比]，即对应等差权重和等比权重，当其为[等差]时，若[权重数值]大于0，取到的随机数越大概率越高，概率呈等值增长。小于0相反。\n当[权重类型]为[等比]时，[权重数值]小于0自动取绝对值。若小于1，取到的随机数越大概率越高，相连两数概率比为[权重数值]。大于1相反。\n<font color=\"red\">【非重随机数x-y(<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[持续时间]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[最大上限])】</font> 取一个随机数，如果在近期取得的记录中不存在它，则返回它，否则再取再判断。\n[持续时间]：从第一次取出开始，超过[持续时间]（单位分钟）后，已记录的随机数清空，为空默认20分钟。\n[最大上限]：最多再取[最大上限]次，如果这么多次还没取到，则清空记录的随机数，从新开始。\n<font color=\"red\">【进制[待转化数值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[原数值进制]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[目标进制]】</font> 将[待转化数值]转化为指定进制，[进制] 支持 2 4 8 10 16 32 64也可用 二 八 十 十六 三十二 六十四。\n<font color=\"red\">【计算[计算公式]】</font> 将[计算公式]计算出结果。支持符号：加 +   减 -   乘 *(需要用#xh转义) ×   除 / ÷   括号 （）()\n另外还支持：  求余 %   求整 \\   求次方 ^   如：4%3=1  4\\3=1 4^3=64\n支持分布运算：符号，或,  如：4+3，×5，-7 相当于 ((4+3)×5)-7\n支持四舍五入：符号@  x@y  表示：将x四舍五入到相对于个位的第y位。\n       y大于0，舍入到小数点后y位；y=0，舍入到整数；y小于0，舍入到小数点前|y|位(需要带上括号)。\n支持位运算：  左位移 &lt;&lt;   右位移 &gt;&gt;   位或 or   位与 and   位异或 xor\n<font color=\"red\">【补位[待补位文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结果长度]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[补位字符]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结尾/开头]】</font> 将长度不足[结果长度]的[待补位文本]用[补位字符]在[结尾/开头]填补。\n\n### 时间类\n\n<font color=\"red\">【时间戳转文本[时间戳]】</font> 将[时间戳]转化为文本 （13/10位均可）\n<font color=\"red\">【现行日期(-年/月/日/星期)】</font> 取系统时间,省略括号及括住的内容取全部。\n<font color=\"red\">【现行时间(-时/分/秒)】</font>当前系统时间,省略括号及括住的内容取全部。\n<font color=\"red\">【13位时间戳】</font> 取当前时间的13位时间戳\n<font color=\"red\">【10位时间戳】</font> 取当前时间的10位时间戳\n<font color=\"red\">【时间间隔[时间文本1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[时间文本2]】</font>返回[时间文本1]与[时间文本2]相差的秒数。\n支持的时间文本格式：\n  1、1973年11月15日12时30分25秒\n  2、1973/11/15 12:30:25\n  3、1973/11/15/12/30/25\n  4、1973/11/15/12:30:25\n  5、1973-11-15-12-30-25\n  6、1973-11-15-12:30:25\n  7、1973.11.15 12:30:25\n  8、19731115123025\n\n### 高级文本操作\n\n<font color=\"red\">【隐藏[内容]】</font> 隐藏[内容]的执行结果。\n<font color=\"red\">【分割取出[被分割文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[分隔符]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出序号]】</font> 将[被分割文本]用[分割符]分割成n份，取出第[取出序号]份\n若[取出序号]&lt;0 倒取。若[取出序号]=0 随机取出。\n<font color=\"red\">【范围取整[数值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[下界]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[上界]】</font> 若[数值]小于[下界]返回[下界];若[数值]大于[上界]返回[上界];否则返回自身\n[下界]：可空，为空无下界\n[上界]：可空，为空无上界\n<font color=\"red\">【取整[被取文本]】</font>  取出[被取文本]中出现的所有数字。\n<font color=\"red\">【取中间XX1<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>XX2<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>XX3<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>XX4】</font> XX1为被取文本，XX2为欲取出文本左边的文本，XX3为欲取出文本右边的文本，XX4为取出第XX4个符合条件的文本。\n当XX4为all时，取出所有符合条件的文本，并且自动填写序号开头。当<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>XX4 不填时，取出随机一个文本。\n当XX4为all[分割符号]时，取出所有符合条件的文本，并且每个文本之间用[分割符号]分割。\n当XX4为top[条数]时，取出符合条件的前[条数]条文本。当XX4为bot[条数]时，取出符合条件的最后[条数]条文本。\n<font color=\"red\">【正则重构[重构文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[表达式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[重构格式]】</font>  将[重构文本]根据[表达式]析取，并按照[重构格式]规整。\n在[重构格式]中，[匹配x] 代表[表达式]中，第x子表达式。不填x表示整个匹配文本。\n<font color=\"red\">【正则[表达式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被搜索的文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[序次](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换文本])】</font>    匹配结果数组中，第[序次]个符合[表达式]的文本   最后一项为空表示取随机一个（注意把*替换为#xh ，否则发送出错）\n当[序次]为all时，取出所有符合条件的文本，并且自动填写序号开头。当<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[序次] 不填时，取出随机一个文本。\n当[序次]为all[分割符号]时，取出所有符合条件的文本，并且每个文本之间用[分割符号]分割。\n当[序次]为top[条数]时，取出符合条件的前[条数]条文本。当[序次]为bot[条数]时，取出符合条件的最后[条数]条文本。\n当[替换文本]不为空时，则表示当前为正则替换，此时[序次]表示替换的次数，小于等于0全部替换，大于0替换[序次]次。\n<font color=\"red\">【子正则[表达式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被搜索的文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[序次]】</font>   第一个符合[表达式]的文本中，第[序次]个<B>子表达式</B>所匹配的文本   最后一项为空表示第一个 ，为0取出整个表达式匹配的文本（注意把*替换为#xh ，否则发送出错）\n<font color=\"red\">【删除[欲被删除文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[删除文本开头]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[删除文本结尾]】</font> 删除[欲被删除文本]中的所有以[删除文本开头]开头，以[删除文本结尾]结尾的文本。\n<font color=\"red\">【选择[序号或逻辑组]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回2]……】</font> 从多个结果中按照约定选择指定返回。\n当[序号或逻辑组]为数值的时候，选择第[序号或逻辑组]个返回。\n当[序号或逻辑组]为逻辑组时，选择第 \"首个成立的逻辑表达式序号\" 个返回。\n逻辑组格式：[逻辑表达式1]||[逻辑表达式2]||[逻辑表达式3].... 逻辑表达式请用【逻辑】包裹。\n如果都不成立选择最后一个。\n逻辑组中要用到“||”可以用“#hz”代替。\n<font color=\"red\">【替换[被替换内容]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被替换文本](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换次数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[并列替换])】</font> 将[被替换内容]中的[被替换文本]替换为[替换文本]，总共替换[替换次数]次。\n省略第三个参数删除。省略第四个参数全部替换。\n多个 [被替换文本] 和 [替换文本] 可用 || 分隔。\n如果实际[用于替换的参数]中有||，可用#hz 代替。\n若[并列替换]为“[并列]”时，则同时进行替换。\n\n### 比较判断\n\n<font color=\"red\">【判空[被判断文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[为空替换文本]】</font> 如果[被判断文本]为空，则此变量表示的值为[为空替换文本]，否则为[被判断文本]\n<font color=\"red\">【判断[被比较文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[比较文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[不相同返回文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[相同返回文本]】</font>  如果[被比较文本]和[比较文本]值不相同，返回[不相同返回文本] 否则返回[相同返回文本]  \n<font color=\"red\">【比较[被比较数值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[比较数值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[前者大返回]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[否则返回]】</font>  如果[被比较数值]比[比较文本]比较数值大，返回[前者大返回] 否则返回[否则返回]  \n<font color=\"red\">【判含[被判断文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被包含文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[不包含返回]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[包含返回]】</font>  如果[被判断文本]不含有[被包含文本]，返回[不包含返回] 否则返回[包含返回]  \n若想判断多个[被包含文本]，用|分割，则这些[被包含文本]只要有一个被包含即被认为是被包含。\n若将[被包含文本]用&分割，则这些[被包含文本]必须全部被包含才被认为是被包含。\n若实际[被包含文本]中有& | 时可用 #bq #hz 来代替他们。\n<font color=\"red\">【判真[逻辑值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[为真返回]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[非真返回]】</font>  如果[逻辑值]为真，返回[为真返回] 否则返回[非真返回]。推荐搭配逻辑变量使用。\n\n### 循环变量\n\n<font color=\"red\">【循环[循环次数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[循环体]】</font>  重复执行[循环次数]次[循环体] 返回每次得到的结果之和。\n<font color=\"red\">【判循[逻辑值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[循环体]】</font>  当[逻辑值]为真时，重复执行[循环体]。推荐搭配逻辑变量使用。\n<font color=\"red\">【Fori[遍历体]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[遍历文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[分隔符]】</font>  将[遍历文本]用[分隔符]分隔成n份，每份作为变量[内容](加[])在[遍历体]中执行一次，返回所有执行结果之和。\n<font color=\"red\">[序号]</font> 仅在循环体/遍历体内生效，表示其已经执行的次数。\n<font color=\"red\">【跳出】</font> 跳出循环，循环体不再执行。\n<font color=\"red\">【继续】</font> 跳到循环尾，本次循环体不再执行。\n\n### 逻辑变量\n\n<font color=\"red\">【逻辑[表达式]】</font> 若逻辑正确返回真，否则返回假。\n支持符号：\n“或”/“||”, “且”/“&amp;&amp;”, “+”, “-”, “*”(#xh代替), “\\”, “/”, “%”,“(”,“)”\n“=”(值等), “==”(全等), “!=”, “!==”, “&gt;”, “&lt;”, “&gt;=”, “&lt;=”\n“in”(包含), “!in”(不包含), “reg”(正则匹配), “!reg”(正则不包含)\n注：\"[\"、\"]\"相当于其他语言的引号，其括起来表示字符串，若字符串中确定没有上述符号可以不加。字符串中的\"[\"、\"]\"可用\"&amp;#91;\" \"&amp;#93;\"  代替。\n\n### IO流\n\n<font color=\"red\">【输入流[标识类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[最大时间]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[最大次数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[单Q次数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[是否继续匹配]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[回调函数]】</font>  程序等待[最大时间]秒，等待消息输入，直到输入[最大次数]次或超过[最大时间]，返回输入的内容。\n[标识类型]： 1：群，同一个群共用一个缓存区。 2：QQ，同一个QQ共用一个缓存区； 3:群内QQ，同一个群的不同QQ用不同的缓存区。 可空，默认2。\n[最大时间]：程序等待时间，可空，默认30。\n[最大次数]：总输入次数上限，为0表示无限次。可空，默认1。\n[单Q次数]: 仅在标识类型为1时有效，指单Q最多输入单Q次数次，可空，默认0，即无限次。\n[是否继续匹配]：进入输入流的消息是否继续匹配其他关键词。若为真则继续匹配，否则不匹配。可空，默认假。\n[回调函数]：每当有消息输入时，即可执行函数名为[回调函数]的函数，并将消息内容当做[参数1]传递给函数。可空，默认不执行回调。\n若[回调函数]返回1，重置输入流；返回-1，结束输入流；返回其他，正常执行输入流。\n<font color=\"red\">【输出流[加入文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[标识类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[输出类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回msgID]】</font>  将[加入文本]放入输出流缓存区，并可选继续加入或者立即释放。\n[标识类型]： 1：群，同一个群共用一个缓存区。 2：QQ，同一个QQ共用一个缓存区； 3:群内QQ，同一个群的不同QQ用不同的缓存区。 可空，默认2。\n[输出类型]： 0：立即输出，不将文本放入缓存区直接输出。 1：加入缓存区，将文本加入缓存区等待输出。 2：释放缓存区，立即释放缓存区中内容，此时[加入文本]无效。 可空，默认0.\n[返回msgID]：将输出消息的msgID赋值给变量[返回msgID]。可空，默认不返回。\n<font color=\"red\">【获取流[索引值]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[获取流类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[标识类型]】</font>  获取指定流缓存区的特定内容。输出流释放后不能再获取到。\n参数：\n[标识类型]： 1：群，同一个群共用一个缓存区。 2：QQ，同一个QQ共用一个缓存区； 3:群内QQ，同一个群的不同QQ用不同的缓存区。 可空，默认2。\n[获取流类型]：0：输入流  1：输出流。 可空，默认0   [索引值]：从1开始，为0取全部(多条[IO]分割)，可空，默认0。\n\n### 大量数据读取\n\n<font color=\"red\">【Forf[遍历体]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[修改模式]】</font>打开[文件路径]，按行逐一读取数据，每行作为变量[内容](加[])在[遍历体]中执行一次，返回所有执行结果之和。\"\n用【Forf-内存xxxx】可以实现更快的遍历，但是只在初始化时才能更新且不支持修改模式。\n[修改模式]：若为“是”或“真”，则修改原文件，但不返回。可空，默认非修改模式。\n<font color=\"red\">【索引表-创建[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[索引项数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[分割符号]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[数值索引]】</font>将[文件路径]读入内存索引表，以供后续调用，推荐在初始化事件下使用。\n本类变量可用处理上百万条数据，创建过程可能会慢，再次创建会覆盖之前创建的。\n[文件路径]：本地文件路径，ANSI编码。\n文件格式：[索引1][分割符号][索引2][分割符号][索引3]...[分割符号][其余字段]，下个记录另起一行。\n[索引项数]: 每条记录添加索引的条数。\n[分割符号]：多个索引之间用[分割符号]分隔。可空，默认空格。\n[数值索引]：如果某个索引确定为数值，可使用本参数来极大加快检索速度。可空，默认不使用数值索引。\n<font color=\"red\">【索引表-搜寻[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[搜寻文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[搜寻模式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回模式]】</font>\n搜寻已载入内存的[文件路径]中，按照指定规则匹配[搜寻文本]的文本。\n本类变量可用处理上百万条数据，使用前确保对应[文件路径]的索引表已被创建。\n[文件路径]：使用【索引表-创建】函数时的文件路径。\n[搜寻文本]：用来进行匹配的文本。\n[搜寻模式]：可用类型：[数值模式]、[首索引模式]、[完全模式]、[模糊模式{模糊度}],四种模式处理速度依次减慢。\n[数值模式]：最快的模式，100w条数据仅需0-20ms，前提是必须存在数值索引，并且由【索引表-创建】所指定[数值索引]参数。\n            当[搜寻文本]与某条记录中[数值索引]项相同时，即匹配。\n[首索引模式]：仅将[搜寻文本]与首个索引项进行匹配，相同即匹配。\n[完全模式]：将[搜寻文本]与每个索引项进行匹配，其中一个相同即匹配。\n[模糊模式{模糊度}]：将[搜寻文本]与每个索引项进行匹配，若大于等于{模糊度}个索引项包含于[搜寻文本]中即匹配。\n[返回模式]：可用类型：[首个返回]、[全部返回]、[随机返回]，三种模式处理速度依次减慢。\n[首个返回]：处理速度最快，当遇见符合的就返回结果。\n[全部返回]、[随机返回]：每条记录判断匹配后，返回匹配中的全部/随机一个。\n\n### 文本行操作\n\n<font color=\"red\">【行操作-删空白行[被删文本]】</font> 删除指定文本中的空白行。\n<font color=\"red\">【行操作-删重复行[被删文本]】</font> 删除指定文本中的重复出现的行。\n<font color=\"red\">【行操作-删首尾空(-首/尾)[被删文本]】</font> 删除每行开头或者结尾的全角和半角空格。省略(-首/尾)开头和结尾都删除\n<font color=\"red\">【行操作-删指定行[被删文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开头行序](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结尾行序])】</font> 删除指定文本中的指定行。\n<font color=\"red\">【行操作-替换指定[被替文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开头行序](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结尾行序]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换文本])】</font> 替换指定文本中的指定行。 \n<font color=\"red\">【行操作-插入文本[被插文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[插入内容](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[行数]】)</font> 插入文本到指定行前。同变量：【插入一行xxx】\n<font color=\"red\">【行操作-按字拆行[被拆文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[每行字数]】</font> 将指定文本按照字数拆分成多行。\n<font color=\"red\">【行操作-每行相连[被连文本1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被连文本2](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[连接字符])】</font> 将两个文本对应行相接连起来。\n<font color=\"red\">【行操作-每行排序[被排文本](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[排序顺逆])】</font> 将每行文本以首字母按照表字母表排序。[排序顺逆] 为[顺序]或[逆序]，默认顺序。\n<font color=\"red\">【行操作-每行反转[被转文本]】</font> 将每行文本左右倒置。\n<font color=\"red\">【行操作-前后反转[被转文本]】</font> 将每行文本行序掉转。\n<font color=\"red\">【行操作-按行分页[被分页文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[每页行数]】</font>  将[被分页文本]每[每页行数]行用[分页]分隔。\"\n<font color=\"red\">【行操作-取出指定[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开头行序]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[结尾行序]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出类型]】</font> 取出指定文本中的指定行。\n[取出类型]可为: [取出所有]  [随机取出]  [随机取x]  [取出前x]  [取出后x]，即取出所有指定行/随机取出/随机取x条/取前x条/取后x条。请带上[]。\n<font color=\"red\">【行操作-添加文本[被添文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[添加类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[添加参数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[添加文本]】</font> 在文本中每行的指定位置或指定文本处添加某文本。\n[添加类型]可为: [文本之前]  [文本之后]  [某位置前]，即：添加在[添加参数]之前/之后/位置前。[某位置前]时，[添加参数]表示添加到的位置。请带上[]。\n<font color=\"red\">【行操作-替换文本[被替文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换参数1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换参数2](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换文本])】</font> 在文本中每行的指定位置或指定文本处替换为某文本。\n[替换类型]可为: [文本之间]  [位置之间]，即：替换[替换参数1]、[替换参数2]中间的文本为[替换文本]。请带上[]。\n[替换类型]也可为: [文本前后]，此时[替换参数1]可为：[文本之前]  [文本之后]，即：将[替换参数2]之前/之后的文本替换为[替换文本]。 请带上[]。\n<font color=\"red\">注释：</font>行序为负表示倒数，结尾行序为0表示最后一行；具体试下便知，不多解释。\n\n### 文本操作\n\n<font color=\"red\">【文本-取出中间[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开始位置]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出长度]】</font> 取出包含指定文本中从指定位置算起指定数量的字符。\n<font color=\"red\">【文本-倒取中间[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[右边文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[左边文本]】</font> 倒着取出指定文本中以指定文本结尾以指定文本开头的文本。\n<font color=\"red\">【文本-取出左边[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出长度]】</font> 取出指定文本中从左边算起指定数量的字符。\n<font color=\"red\">【文本-取出右边[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出长度]】</font> 取出指定文本中从右边算起指定数量的字符。\n<font color=\"red\">【文本-取出长度[被取文本]】</font> 取出指定文本数据的长度。\n<font color=\"red\">【文本-寻找文本[被寻文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[欲寻内容](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开始位置])】</font> 找出指定一文本在另一文本中最先出现的位置。\n<font color=\"red\">【文本-倒找文本[被寻文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[欲寻内容](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开始位置])】</font> 找出指定一文本在另一文本中最后出现的位置。\n<font color=\"red\">【文本-反转文本[反转文本]】</font> 将指定一文本左右倒置。\n<font color=\"red\">【文本-替换文本[被替文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[开始位置]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换长度](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换文本])】</font> 将指定文本的某一部分用其它的文本替换。\n<font color=\"red\">【文本-转为大写[转换文本]】</font> 将指定文本的小写字母变为大写。\n<font color=\"red\">【文本-转为小写[转换文本]】</font> 将指定文本的大写字母变为小写。\n<font color=\"red\">【文本-取文本左[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被寻内容]】</font> 取出指定文本中某文本的左边部分。\n<font color=\"red\">【文本-取文本右[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[被寻内容]】</font> 取出指定文本中某文本的右边部分。\n<font color=\"red\">【文本-中间替换[被取文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[左边文本]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[右边文本](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[替换文本])】</font> 取出指定文本开头和结尾的文本，并且替换为指定文本。\n<font color=\"red\">注释：</font> 一个汉字占两个字符；寻找不到文本返回-1；\n<font color=\"red\">【文本-删首尾空(-首/尾)[被删文本]】</font> 删除开头或者结尾的全角和半角空格。省略(-首/尾)开头和结尾都删除。\n\n### 磁盘操作\n\n<font color=\"red\">【文件-创建[目录路径]】</font> 创建一个目录。\n<font color=\"red\">【文件-删除[目录或文件路径]】</font> 删除一个目录或者文件。\n<font color=\"red\">【文件-判存[源目录或文件路径]】</font> 判断目录或文件是否存在。返回真或假。\n<font color=\"red\">【文件-移动[源目录或文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[新目录或文件路径]】</font> 移动目录或者文件。\n<font color=\"red\">【文件-复制[源目录或文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[新目录或文件路径]】</font> 复制目录或者文件。\n<font color=\"red\">【文件-更名[源目录或文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[新目录或文件路径]】</font> 更名目录或者文件。\n<font color=\"red\">【文件-搜索[目录]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[包含关键词]】</font>搜索[目录]及其子目录下所有包含[包含关键词]的子目录及文件。省略[包含关键词]取出目录（包括子目录）下所有的子目录及文件。\n<font color=\"red\">【文件-枚举[目录或路径表达式]】</font> 当[目录或路径表达式]为目录时，枚举该目录下所有文件及子目录。当其为路径表达式时，枚举所有符合表达式的文件及子目录。\n<font color=\"red\">【文件-随取[目录或路径表达式]】</font> 当[目录或路径表达式]为目录时，随取一个该目录下的文件或子目录。当其为路径表达式时，随取一个符合表达式的文件或子目录。\n<font color=\"red\">【文件-取值[文件路径]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[取出属性]】</font> 取出[文件路径]的指定属性。[取出属性]可为：格式、类型、大小、创建时间、修改时间、访问时间\n提示：1、目录即文件夹的路径。2、路径表达式可以使用多字符 (*) 和单字符 (?) 通配符来指定多重文件\n\n### 图片识文\n\n开启图片识别后，自动识别图片上的文字\n在识别图片后 识别结果前会加上前缀[图文]作为新的消息（开启后可能造成卡顿，不推荐开启）\n\n### 语音识别\n\n开启语音识别后，自动识别语音内容\n在识别语音后 识别结果前会加上前缀[语音]作为新的消息\n\n### 回复控制\n\n<font color=\"red\">【拦截】</font> 触发<font color=\"red\">【拦截】</font> 后，拦截后续插件处理。\n<font color=\"red\">【清空】</font> 清空前部分代码，后面正常回复。\n<font color=\"red\">【返回[返回结果]】</font> 整体代码直接返回为[返回结果]。\n<font color=\"red\">【重定向[目标QQ](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[目标群]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[子关键词])】</font> 将消息来源重新定义为[目标QQ]、[目标群]。同时也可以重定义[子关键词]。省略则使用原来的，[目标群]填0表示私聊。\n<font color=\"red\"> [分页] </font> 请带上[]。将消息分割为多条消息，逐一发送。\n<font color=\"red\">【概率[百分比]】</font>匹配关键词后，[百分比]概率触发该回复。[百分比] 为1-100之间的整数。\n<font color=\"red\">【继续匹配】</font>执行后清空本条回复，继续向后（更低优先级的关键词）匹配。\n\n### 调用回复\n\n<font color=\"red\">【回复[关键词](<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[子关键词])】</font>[关键词]即关键词列表中的关键词。填写在回复中，代表调用对应[关键词]下的回复，同时传递[子关键词]到目标回复下。（可用#zzk、#yzk来代替【、】）\n<font color=\"red\">【重发XXX】</font>填写在回复中，触发后相当于机器人再次收到内容为<font color=\"red\">XXX</font>的消息。（发送者/群组 不变）。重发后的消息不受各类开关限制。等重发的内容处理完毕才继续执行。\n<font color=\"red\">【重发[RD:QQ]XXX】</font> 重发重定向。将发送者重定向为QQ，请带上[]。\n<font color=\"red\">【线程重发XXX】</font> 同【重发】，只是该重发将启动新的线程，不再等待重发完毕才继续执行。\n<font color=\"red\">重发屏蔽：</font> 即重发指令只执行命令不实施发送消息，具体指令【重发屏蔽xxx】  【线程重发屏蔽xxx】。\n\n### 前提回复\n\n<font color=\"red\">【前提XXX】</font>说明：\n<font color=\"red\">【前提XXX】</font>填写在关键词中，XXX为已经存在回复的关键词。\n当关键词为XXX的回复触发后，接下来的30s(插件设置里可修改)内的任一消息即可触发关键词为<font color=\"red\">【前提XXX】</font>的回复。\n触发时，此时的子关键词（【内容】）即为所发送的完整的消息。\n<font color=\"red\">【前提QQXXX】</font>说明：\n<font color=\"red\">【前提QQXXX】</font>填写在关键词中，XXX为已经存在回复的关键词。\n当关键词为XXX的回复触发后，发送者接下来发送的任一消息即可触发关键词为<font color=\"red\">【前提QQXXX】</font>的回复。\n触发时，此时的子关键词（【内容】）即为所发送的完整的消息，与原前提不同的是没有时间限制，但是只可触发一次。\n<font color=\"red\">【前提群XXX】</font>说明：\n<font color=\"red\">【前提群XXX】</font>同 【前提QQXXX】 只是可触发者改为 发送者所在群的任一群员。\n<font color=\"red\">多重前提：</font> 即前提套前提，一个前提结束后再次触发另一个前提。\n关键词格式：【前提xxx】、【前提【前提xxx】】、【前提【前提【前提xxx】】】....  \n对应解释：第一个前提、第一个结束后下一次回复触发的第二个前提、第三重前提....\n注意：嵌套部分不需要加QQ/群。\n<font color=\"red\">【前提次数+1】</font>说明：\n<font color=\"red\">【前提次数+1】</font>用在【前提群xxx】或【前提QQxxx】的回复下，执行后，该前提结束后仍下次发言仍可再次触发该前提。\n<font color=\"red\">【前提跳出】</font>说明：\n<font color=\"red\">【前提跳出】</font>用在前提嵌套之间，执行后结束嵌套。\n<font color=\"blue\">注：</font> 本类变量最好用IO流代替。\n\n### 制图变量\n\n<font color=\"red\">【制图[背景图]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[每行字数][写入数据]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[横坐标]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[纵坐标]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[大小]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[颜色]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[字体]】</font> 后面的5个参数可以省略。\n [背景图] 可以为图片URL、可以为CQ码、可以为文件路径、可以为【图片XXX】、可以为[BIN]/[图BIN]。 [写入数据] 可以为文本、可以为[BIN]/[图BIN]。\n 横坐标、纵坐标、大小 是写入文字的横纵坐标和大小。 [每行字数]请带上[]。颜色1-9 分别是 红橙黄绿青蓝紫黑白，其余颜色：\n 10 藏青  11 墨绿  12 深青  13 红褐  14 紫红  15 褐绿  16 深灰  17 灰色  18 艳青  19 品红\n 20 蓝灰  21 藏蓝  22 嫩绿  23 青绿  24 黄褐  25 粉红  26 嫩黄  27 银白  28 天蓝  29 灰绿\n 30 青蓝  31 橙黄  32 桃红  33 芙红  34 深灰 \n [字体] 可以为：仿宋/黑体/楷体/宋体/微软雅黑/新宋体等 操作系统已经存在的字体。\n如：【制图【运行目录】\\data\\image\\EPK自定义回复\\记仇.jpg<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[5]今天这个仇我记下了。<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>50<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>300<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>20<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>0】\n\n### 动态链接库（dll）的调用\n\n<font color=\"red\">【装载[动态链接库名称]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[DLL公开的函数名]】</font> 装载[动态链接库名称]到内存，同时置当前dll命令执行程序为其内部公开的[DLL公开的函数名]。\n<font color=\"red\">【DLL ([返回类型]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>)[参数类型][参数1]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数类型][参数2]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[参数类型][参数3]...】</font> 执行上一个装载变量载入的dll中的指定函数。\n<font color=\"red\">注意： </font>\n1、[参数类型]、[返回类型]可为 [文本][整数][逻辑][长整][双小][小数]（即文本型、整数型、逻辑型、长整数型、双精度小数型、小数型）\n2、类型请带上[]，参数不必带。最多可以传递给dll 16个参数。\n3、执行前请装载，同一函数连续调用则不必装载。内置有判断，不用担心同一dll被装载多次。\n4、无返回或不想让其返回，可省略[返回类型]（即括号所括内容）。\n5、重启插件/机器人即可卸载装载的dll\n\n&gt;每次回复调用&lt;\n在应用目录下创建文档: 每次回复.txt \n每次触发回复都会执行 每次回复.txt 内的代码(用于百变气泡等)。\n\n### 载入APP\n\n<font color=\"red\">【APP [应用名称]】</font>说明：\n<font color=\"red\">【APP [应用名称]】</font>填写在回复中，触发后调用该APP，在初次调用时载入，载入后若想重新载入，请重启插件/机器人。\n[应用名称] 为 酷Q目录\\bin\\EPK 目录下对应的应用名称。\n<font color=\"red\"> APP 开发 </font> 具体见：<a href=\"http://myepk.club/EPKAppSdk.zip\">EPKAppSdk (EPL)</a>\n\n### 关键词组\n\n<font color=\"red\">关键词组</font>  说明：本类变量可以将关键词不同但回复相同的一类关键词回复统一到一条关键词下。\n<font color=\"red\"> [词集xxxx]</font> xxxx为自定义关键词组的名称，填写在关键词处，请加上[]。\n<font color=\"red\"> 1、</font> 该关键词的回复下填写多个关键词，这些关键词用“*”分隔开。\n<font color=\"red\"> 2、</font> 这些关键词的格式可以为：[完全]xxx 、[模糊]xxx 、[前缀]xxx 、[正则]xxx 、xxx 五种格式，请加上[]。\n<font color=\"red\"> 3、</font> 对应四种匹配方式，完全匹配，模糊匹配，前缀匹配，正则匹配，不加匹配方式默认模糊匹配。\n<font color=\"red\"> 4、</font> 其中省略前面的匹配方式即为模糊匹配，正则中要用到“*”请用“#xh”代替。\n<font color=\"red\"> [xxxx] </font> 说明：填写在关键词处，和[词集xxxx] 中的xxxx对应。请加上[]。\n如果触发[词集xxxx]下的关键词，则调用关键词为[xxxx]的回复。\n<font color=\"red\">词集的独立匹配规则：</font> 词集的匹配与关键词匹配相独立，即：一条消息可以同时触发多条词集回复和一条非词集关键词回复。\n<font color=\"red\">全匹配词集：</font> 关键词填写 [全匹配xxx] xxx自定义。 即：所有消息都可匹配本回复。\n\n### 字节集变量\n\n<font color=\"red\"> [图BIN] </font>  代表发送图片的字节集。仅在变量【写出XX】、【超级访问XX】、【制图XXX】中有效。\n<font color=\"red\">【读BIN[参数]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[储存变量]】</font>读取字节集数据，将读取数据存在指定变量中。\n [参数] 可以为文本、CQ码、文件路径、Url地址或“-UTF[文本]”\n[存储变量]：用来接收读取倒的字节集，返回的变量可填在“图片/语音/写出/取MD5/HexE/转为文本/编码BASE64”中，可空，默认存储到[BIN]中。\n<font color=\"red\"> [BIN] </font>  适用范围同[图BIN] 。[BIN]表示上一个通过【读BIN[XXX]】得到的字节集。\n<font color=\"red\">【解码BASE64XXX<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[返回字节集]】</font>将XXX base64解码，解码后的字节集存放在变量[返回字节集]中。\n[返回字节集]：可空，为空存放在[BIN]中。\n<font color=\"red\">【编码BASE64XXX】</font>将XXX编码为base64编码, XXX可包含[BIN]/[图BIN]\n<font color=\"red\">【取字节集中间[BIN]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[欲取字节集前面字节集的文本形式]<font size=\"2\" color=\"blue\"><B>&gt;=&lt;</B></font>[欲取字节集后面字节集的文本形式]】</font>，取出指定字节集，将取后的字节集放进[BIN]中\n\n\n>部分变量在核心转义系统前被解释，还有部分变量在核心转义系统后被解释，下面是他们的优先级：\n>【概率、【权限】、【主人】、【群管】、【管理】、【回复间隔、【一次间隔、【一天上限、>【一周上限、【一月上限、\"*\"、【度丫丫】、【音源、[私聊、【传递】、\n<font color=\"red\">其他函数/变量</font>、[撤回](由[撤回]转变)、[拦截](由[拦截]转变)、[私聊](实际执行私聊变量)、[执行时间]、[分页]\n>上述\"<font color=\"red\">其他函数/变量</font>\"即核心转义系统所转义的函数/变量，只有他们支持嵌套其他变量/函数、支持在编辑器中被解释(包括【传递】)、支持重复(包括【传递】、[分页]","tags":["QQ机器人","变量","自定义"],"categories":["作品开发"]},{"title":"虎牙+斗鱼直播 AI智能机器人发布","url":"/dybot.html","content":"\n\n**AI小监** 是一款真对直播用户群体的AI智能QQ机器人.主要实现了虎牙跟斗鱼主播以及用户的数据分析统计功能,让大家更快速的通过QQ群发送命令第一时间了解到平台，主播，以及用户的最新动态. \n\n本功能所有数据均来自**互联网**,所有数据都可以在各大平台免费查阅.**不保证数据的真实性，仅供娱乐！！ 谢谢**\n\n## 主要功能介绍\n\n### 主播功能：\n\n- [ ] 主播月报\t\t--查看主播本月数据\n- [ ] 主播周报\t\t--查看主播本周数据\n- [x] 直播数据\t\t--查看主播当天直播数据\n- [x] 开播查询\t\t--查询主播当前开播状态\n- [x] 开播时长\t\t--查询主播当前直播时长\n- [x] 弹幕排行\t\t--查询直播间当天弹幕排行榜\n- [x] 消费排行\t\t--查询直播间当天消费排行榜\n- [ ] 消费排行周\t\t--查询直播间本周消费排行\n- [ ] 消费排行月\t\t--查询直播间本月消费排行\n- [x] 查看录像\t\t--发送直播间近期录像\n- [ ] ~~主播弹幕~~\t\t--<font color=\"#dd0000\">查看主播近期发送了那些弹幕 涉及到隐私已删除</font>\n\n\n### 用户相关功能\n\n- [ ] 用户周报XXX\t\t--查看用户本周数据\n- [ ] 用户月报XXX\t\t--查看用户本月数据\n- [ ] 追踪用户XXX\t\t--查看用户最近看了那些直播间\n- [ ] ~~用户弹幕XXX~~\t\t--<font color=\"#dd0000\">查看用户近期发送了那些弹幕 涉及到隐私已删除</font>\n\n\n### 娱乐相关\n\n- [ ] XX说\t\t--玩梗功能，比如把你喜欢的主播的成名语通过机器人自动制作成图片\n- [ ] 开车\t\t--最牛逼的功能 当用户发送开车后 机器人自动发送美女图片\n- [ ] 表情包XXX\t\t--玩梗功能，发送命令后机器人制动制作设定好的表情包\n![](https://cdn.jsdelivr.net/gh/htmlmi/cdn@master/hexo/1619784445000.jpg) <img src=\"https://cdn.jsdelivr.net/gh/htmlmi/cdn@master/hexo/1619784488000.jpg\" style=\"zoom:40%;\" />\n> XX说：当用户发送 主播说后 机器人自动制作一张\n> 表情包XXX：当用户发送表情包就这 就这？？ 机器人自动制作一张\n> 上面制图素材可以根据您的需求自由定制 表情包 可以多个 \n> 制作聊天截图 跟表情包 等素材需要提供 背景图片\n\n\n\n\n\n## 智能群管功能\n\n### 智能助手\n\n- [ ] 自动审核\t\t--用户加群后根据设定 机器人24小时自动通过进群\n- [ ] 加群自动欢迎\t\t--用户加群后自动艾特用户发送指定欢迎消息\n- [ ] 退群自动提示\t\t--用户退群后发送消息告知大家 而不是悄然离去\n- [ ] 防广告功能\t\t--用户在群内发送违规词 `可自定义` 后 机器人可自动 **撤回**，**禁言** 或 **踢出** 群聊\n- [ ] 智能答题系统\t\t--根据管理员设定好的关键词 机器人自动回答用户问题\n\n> 防广告功能 可根据群管理自由设置违禁词，比如设置 <font color=\"#dd0000\">红包</font> 后，用户在群内发送 <font color=\"#dd0000\">红包</font> 这两个字 机器人就会根据群管设定的处罚来处理\n\n\n### 群管功能\n\n- [x] 禁言QQ\t\t`需管理员权限` 发送命令即可禁言当事人 如：`禁言@Timiy*30`  表示禁言Timiy 30分钟\n- [x] 解禁QQ\t\t`需管理员权限` 发送命令即可解禁当事人 如： `解禁@Timiy`\n- [x] 撤回QQ\t\t`需管理员权限` 发送命令即可撤回当事人消息 如：`撤回@Timiy*10` 表示撤回Timiy10条消息\n- [x] 踢出QQ\t\t`需管理员权限` 发送命令直接T人 如： `踢出@Timiy`\n- [x] 警告QQ\t\t`需管理员权限` 发送命令可警告当前用户 如： `警告@Timiy`  当警告次数超过设定值将被T出群\n- [x] 封印QQ\t\t`需管理员权限` 发送命令可让机器人屏蔽该用户消息 防止刷屏 如：`封印@Timiy` \n- [x] 解封QQ\t\t`需管理员权限` 发送命令解除机器人对当事人的屏蔽 如：`解封@Timiy`\n- [x] 拉黑QQ\t\t`需管理员权限` 发送命令拉黑指定QQ  如：`拉黑@Timiy`\n\n> 当用户呗拉黑后 再次加群机器人将会直接拒绝该用户，如果该用户呗别人邀请进来机器人也会立即将他T出群聊。如果需要解除  可在群内发送 解黑4370142 即可 后面数字是QQ号","tags":["QQ机器人","虎牙","斗鱼","直播"],"categories":["作品开发"]},{"title":"Hello word","url":"/hexo.html","content":"\nHello 我的网站诞生了，它使用的是Hexo开发，部署再Github、使用github action 持续部署、使用 BRIEF 极简化轻社交主题作为前端渲染 后端使用的是`HexoPlusPlus后台`\n\n### 快速安装：\n\n安装hexo\n\n``` bash\n$ npm install hexo-cli -g\n```\n\n初始化博客\n\n``` bash\n$ hexo init blog\n```\n\n进入博客目录\n\n``` bash\n$ cd blog\n```\n\n执行安装\n\n``` bash\n$ npm install\n```\n\n运行Hexo\n``` bash\n$ hexo server\n```","tags":["Hexo"],"categories":["Hexo"]}]